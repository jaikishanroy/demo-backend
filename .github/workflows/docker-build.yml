name: CI/CD Pipeline for demo-backend (Spring Boot with Java 17)

# Trigger the workflow on push to main branch or PR to main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      # Step 3: Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 4: Build the Spring Boot application using Maven
      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      # Step 5: Run unit tests
      - name: Run tests
        run: mvn test



      # Step 6: Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      # Step 7: Build and tag the Docker image
      - name: Build Docker image for demo-backend
        run: |
          docker build -t jaikishanroy/demo-backend:latest .

      # Step 8: Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: docker push jaikishanroy/demo-backend:lates
      # Step 8: Deploy to AWS Elastic Beanstalk or other target platform
      - name: Deploy to AWS Elastic Beanstalk
        run: |
          echo "Deploying demo-backend to AWS Elastic Beanstalk"
          aws elasticbeanstalk create-application-version --application-name demo-backend --version-label v1 --source-bundle S3Bucket=my-bucket,S3Key=demo-backend.zip
          aws elasticbeanstalk update-environment --environment-name demo-backend-env --version-label v1

      # Step 9: Notify via Slack or Email (optional)
      - name: Notify via Slack or Email
        run: |
          # Add your Slack/Email notifications here
          echo "Deployment completed."
